#!/bin/bash

# Sync dotfiles script - updates dotfiles in current environment

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

DOTFILES_REPO="https://github.com/nfrith/dotfiles"
DOTFILES_DIR="$HOME/.dotfiles"

usage() {
    echo "Usage: sync-dotfiles [OPTIONS]"
    echo ""
    echo "Sync and update dotfiles in the current environment."
    echo ""
    echo "Options:"
    echo "  --force              Force update (remove existing and re-clone)"
    echo "  --repo <url>         Use custom dotfiles repository"
    echo "  -h, --help           Show this help message"
}

# Default values
FORCE_UPDATE=false
CUSTOM_REPO=""

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --force)
            FORCE_UPDATE=true
            shift
            ;;
        --repo)
            CUSTOM_REPO="$2"
            shift 2
            ;;
        -h|--help)
            usage
            exit 0
            ;;
        *)
            echo -e "${RED}Unknown option: $1${NC}"
            usage
            exit 1
            ;;
    esac
done

# Use custom repo if provided
if [[ -n "$CUSTOM_REPO" ]]; then
    DOTFILES_REPO="$CUSTOM_REPO"
fi

echo -e "${BLUE}üîÑ Syncing dotfiles...${NC}"
echo -e "${YELLOW}Repository: ${DOTFILES_REPO}${NC}"

# Remove existing dotfiles if force update
if [[ "$FORCE_UPDATE" == true && -d "$DOTFILES_DIR" ]]; then
    echo -e "${YELLOW}üóëÔ∏è  Removing existing dotfiles directory...${NC}"
    rm -rf "$DOTFILES_DIR"
fi

# Clone or update dotfiles repository
if [[ -d "$DOTFILES_DIR" ]]; then
    echo -e "${YELLOW}üì• Updating existing dotfiles...${NC}"
    cd "$DOTFILES_DIR"
    git pull origin main
else
    echo -e "${YELLOW}üì• Cloning dotfiles repository...${NC}"
    git clone "$DOTFILES_REPO" "$DOTFILES_DIR"
    cd "$DOTFILES_DIR"
fi

# Run the installation script
echo -e "${YELLOW}üîß Running dotfiles installation...${NC}"
if [[ -f "install.sh" ]]; then
    chmod +x install.sh
    ./install.sh
else
    echo -e "${RED}Error: install.sh not found in dotfiles repository${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Dotfiles sync complete!${NC}"

# Prompt to reload shell
echo -e "${BLUE}üí° Reload your shell to apply changes:${NC}"
if [[ -n "$ZSH_VERSION" ]]; then
    echo -e "${YELLOW}  source ~/.zshrc${NC}"
elif [[ -n "$BASH_VERSION" ]]; then
    echo -e "${YELLOW}  source ~/.bashrc${NC}"
else
    echo -e "${YELLOW}  Restart your terminal or re-login${NC}"
fi